#!/usr/bin/env bash

# install
#
#    This is a script to install my dotfiles on a machine by symlinking
#    everything into the right place in the home directory.
#
# OPTIONS
#
#    - `FORCE=1` to force overwrite
#    - `DEBUG=1` to dry run
#

set -uef -o pipefail

# --[ Configuration ]

# Set the "base" directory we should install dotfiles into. You can change this
# value to test the script without messing with a real home directory. Rather
# useful for debugging.
export BASE_DIR="$HOME"

# --[ END Configuration ]

MKDIR=mkdir
LN=ln
RM=rm

if [[ "${DEBUG:-}" -ne "" ]] ; then
	# If we pass 'DEBUG=1' (value is irrelevant), we should prefix commands
	# with 'echo' to do a dry run.
	#
	# These must respect the custom IFS set in `link_config`
	MKDIR="echo		mkdir"
	LN="echo		ln"
	RM="echo		rm"
fi

export MKDIR
export LN
export RM

link_config() {
	OLDIFS="$IFS"
	IFS="		"
	target="$2/${1#"$3/"}"

	if [ "$FORCE" != "" ] ; then
		$RM -f "$target"
	fi

	if [ ! -e "$target" ] || [ "$FORCE" != "" ] ; then
		[[ ! -e "$(dirname $target)" ]] && $MKDIR -p "$(dirname $target)"
		$LN -s "$PWD/$1" "$target"
	fi
	IFS="$OLDIFS"
}
export -f link_config

find configs -mindepth 1 -type f -exec bash -c 'link_config "$1" $BASE_DIR configs' _ {} \;

if [ "$(uname)" = "Darwin" ] ; then
	# Some things on macOS store things in `~/Library` instead of the XDG
	# paths, so we need to symlink some things. This is maybe not the most
	# graceful solution but it is the simplest.
	ln -sfh "$HOME/.config/sublime-text-3/" "$HOME/Library/Application Support/Sublime Text 3"
fi
