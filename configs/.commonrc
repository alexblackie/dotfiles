# ------------------------------------------------------------------------------
# Aliases & custom functions
# ------------------------------------------------------------------------------
alias ls='ls -Gph'
alias la='ls -ah'
alias ll='ls -l'

alias g='git'
alias gst='git status'
alias gp='git push'
alias yolo='git push -f origin'

alias v='vim'

alias tm='tmux'
alias tma='tmux attach'

alias fr='foreman run'
alias fs='foreman start'
alias fds='foreman start -f Procfile.dev'

alias vag='vagrant'

alias :q='exit'

# In these Dockerized functions, you can forward a port by passing the port
# number as the second argument.
#
# ex., dexec java 8080 mvn jetty:run
# or, dexec java mvn package
dexec() {
	numerical="^[0-9]+$"
	if [[ "$2" =~ $numerical ]] ; then
		PORTS=(-p "$2:$2")

		if [[ "${@:3}" != "" ]] ; then
			CONTAINER_ARGS="${@:3}"
			docker run -it --rm -v `pwd`:/data $PORTS alexblackie/dev_$1 -lc "$CONTAINER_ARGS"
		else
			docker run -it --rm -v `pwd`:/data $PORTS alexblackie/dev_$1
		fi
	else
		if [[ "${@:2}" != "" ]] ; then
			CONTAINER_ARGS="${@:2}"
			docker run -it --rm -v `pwd`:/data alexblackie/dev_$1 -lc "$CONTAINER_ARGS"
		else
			docker run -it --rm -v `pwd`:/data alexblackie/dev_$1
		fi
	fi

}

alias rux="dexec ruby"

# ex., be 3000 rails s
# or, be rake some:task
be() {
	numerical="^[0-9]+$"
	if [[ "$1" =~ $numerical ]] ; then
		rux $1 bundle exec ${@:2}
	else
		rux bundle exec $@
	fi
}

startdb() {
	DIR="$HOME/.postgresql_data/$1"
	PORT=${2:-5432}
	mkdir -p "$DIR"
	sudo chown 26:26 "$DIR"
	sudo chcon -Rt svirt_sandbox_file_t "$DIR"
	docker run -v "$DIR:/var/lib/postgresql/data" -p $PORT:5432 -e POSTGRES_PASSWORD=password123 postgres
}

fpass() {
	filename=$(cd $HOME/.password-store && ag . -l -g '' | fzy)
	pass -c ${filename/.gpg/}
}

wifi() {
	if [[ "$2" != "" ]]; then
		sudo nmcli dev wifi con "$1" name "$1" password "$2"
	else
		sudo nmcli dev wifi con "$1" name "$1"
	fi
}
alias widown='sudo nmcli dev disconnect wlp3s0'

vs() {
	args=$(printf "%s " "$@") # concatenate arguments into single string
	vagrant ssh -c "$args"
}

serve() {
	port="${1:-3000}"
	rux $port ruby -run -e httpd . -p $port
}

refactor() {
	# Takes two args:
	#	 $1 = current
	#	 $2 = wanted
	# ex, to change "user" to "account": `refactor user account`

	ag -l $1 | xargs sed -i "s/$1/$2/g"
}

jsonget() {
	curl -s $@ | python -m json.tool | pygmentize -l json
}


# ------------------------------------------------------------------------------
# Libraries/Imports
# ------------------------------------------------------------------------------
if [ -f ~/.env ]; then
	source ~/.env
fi

export CHRUBY_ROOT='/usr/local/share/chruby'
if [ -d "${CHRUBY_ROOT}" ]; then
	source "$CHRUBY_ROOT/chruby.sh"
	source "$CHRUBY_ROOT/auto.sh"
fi


# ------------------------------------------------------------------------------
# Environment
# ------------------------------------------------------------------------------
export TERM="screen-256color"
export EDITOR="vim"
export PATH="$HOME/bin:$HOME/.gem_local/bin:$PATH"
