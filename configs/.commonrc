# ------------------------------------------------------------------------------
# Environment
# ------------------------------------------------------------------------------
export TERM="xterm-256color"
export EDITOR="nvim"
export PATH="$HOME/bin:$PATH"
export FZF_DEFAULT_OPTS="--no-color"
export FZF_DEFAULT_COMMAND="fd -t f -H"

SED_EXEC="sed"
if hash gsed >/dev/null 2>&1 ; then
	SED_EXEC="gsed"
fi

# ------------------------------------------------------------------------------
# Aliases
# ------------------------------------------------------------------------------
alias e="$EDITOR"
alias be="bundle exec"

# ------------------------------------------------------------------------------
# Custom functions
# ------------------------------------------------------------------------------
serve() {
	ruby -run -e httpd . -p ${1:-3000}
}

refactor() {
	# Takes two args:
	#	 $1 = current
	#	 $2 = wanted
	# ex, to change "user" to "account": `refactor user account`

	rg -l $1 | xargs $SED_EXEC -i "s/$1/$2/g"
}

cdp() {
	# "cd to project"
	#
	# Finds source code project directories and allows fuzzy-finding one, then
	# cd's to whichever you choose.
	#
	# I use two different directories structures, depending on the project,
	# computer, or whatever.
	#	- "code" is "flat" reverse-domain format repos, like
	#	"com.whatever.reponame" and so maxdepth is just 1.
	#	- "src" is a GOPATH-style full URL, so it needs a maxdepth of 3.
	targets="$(find $HOME/src -maxdepth 3 -type d)\n"
	targets+="$(find $HOME/code -maxdepth 1 -type d)"

	target="$(echo $targets | $SED_EXEC -e "s%$HOME/%%" | fzy)"

	if ! [ "$target" = "" ] ; then
		# only cd if we actually chose something
		cd "$HOME/$target"
	fi
}

fzyfindlocal() {
	# Use fzy to find a file or folder in/below the pwd.
	#
	# Useful for running commands quickly, if bound to a key. For example:
	#
	#	$ bin/test <c-f>
	#	> mytest
	#	test/myproject/lib/subcomponent/mytest
	#
	#	$ bin/test test/myproject/lib/subcomponent/mytest
	#
	# Most of this was "inspired" by jhawthorn's fzy.zsh:
	#	https://github.com/jhawthorn/dotfiles/blob/d99d6907f890e38445124aa657ea317ad3046b13/zsh/zsh/fzy.zsh
	local selected_path
	echo # Run fzy underneath the current prompt
	selected_path=$(fd -t f | fzy) || return
	LBUFFER="$LBUFFER${(q)selected_path} " # ${(q)VAR} shell-escapes the string
}

eg() {
	$EDITOR $(git status --porcelain | awk '{print $2}' | fzy)
}

# ------------------------------------------------------------------------------
# Libraries/Imports
# ------------------------------------------------------------------------------
if [ -f ~/.env ]; then
	source ~/.env
fi

if [ -d "$HOME/.asdf" ] ; then
	source "$HOME/.asdf/asdf.sh"
fi
