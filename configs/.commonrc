# ------------------------------------------------------------------------------
# Environment
# ------------------------------------------------------------------------------
export TERM="xterm-256color"
export EDITOR="nvim"
export PATH="$HOME/bin:$HOME/.gem_local/bin:$PATH"
export FZF_DEFAULT_COMMAND="ag -l"

# ------------------------------------------------------------------------------
# Aliases & custom functions
# ------------------------------------------------------------------------------
alias e="$EDITOR"
alias tm="tmux"
alias tma="tmux attach"
alias yolo="git push -f origin"

alias be="bundle exec"

serve() {
	ruby -run -e httpd . -p ${1:-3000}
}

refactor() {
	# Takes two args:
	#	 $1 = current
	#	 $2 = wanted
	# ex, to change "user" to "account": `refactor user account`

	ag -l $1 | xargs sed -i "s/$1/$2/g"
}

cdp() {
	# "cd to project"
	#
	# Finds source code project directories and allows fuzzy-finding one, then
	# cd's to whichever you choose.
	#
	# I use two different directories, depending on the project, computer, or
	# whatever. "code" is github-style "username/repo" and so maxdepth is just 2.
	# "src" is a GOPATH-style full URL, so it needs a maxdepth of 3.
	targets="$(find $HOME/src -maxdepth 3 -type d)"
	targets+="$(find $HOME/code -maxdepth 2 -type d)"

	target="$(echo $targets | sed -e "s%$HOME/%%" | fzy)"

	if ! [ "$target" = "" ] ; then
		# only cd if we actually chose something
		cd "$HOME/$target"
	fi
}

fzyfindlocal() {
	# Use fzy to find a file or folder in/below the pwd.
	#
	# Useful for running commands quickly, if bound to a key. For example:
	#
	#	$ bin/test <c-f>
	#	> mytest
	#	test/myproject/lib/subcomponent/mytest
	#
	#	$ bin/test test/myproject/lib/subcomponent/mytest
	#
	# Most of this was "inspired" by jhawthorn's fzy.zsh:
	#	https://github.com/jhawthorn/dotfiles/blob/d99d6907f890e38445124aa657ea317ad3046b13/zsh/zsh/fzy.zsh
        local selected_path
        echo # Run fzy underneath the current prompt
        selected_path=$(ag . -l -g '' | fzy) || return
        LBUFFER="$LBUFFER${(q)selected_path} " # ${(q)VAR} shell-escapes the string
}

# ------------------------------------------------------------------------------
# Libraries/Imports
# ------------------------------------------------------------------------------
if [ -f ~/.env ]; then
	source ~/.env
fi

if [ -d "$HOME/.asdf" ] ; then
	source "$HOME/.asdf/asdf.sh"
fi

if [ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ] ; then
	source "$HOME/.nix-profile/etc/profile.d/nix.sh"
fi
