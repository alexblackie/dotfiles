# ------------------------------------------------------------------------------
# Aliases & custom functions
# ------------------------------------------------------------------------------
alias tm='tmux'
alias tma='tmux attach'
alias yolo='git push -f origin'

alias rux="dexec ruby"
alias erx="dexec erlang"
alias jax="dexec java"
alias elx="dexec elixir"

alias be="bundle exec"

alias sub="/usr/local/sublime_text_3/sublime_text"

chex() {
	source $HOME/bin/change-elixir $@
}

crun() {
	if [ -f .crundefault ] ; then
		CONTAINER_NAME="$(cat .crundefault | xargs)"
		CMD="$@"
	else
		CONTAINER_NANME="$1"
		CMD="${@:2}"
	fi

	docker-compose run --rm $CONTAINER_NAME "$CMD"
}

startdb() {
	DIR="$HOME/.postgresql_data/$1"
	PORT=${2:-5432}
	mkdir -p "$DIR"
	if hash chcon >/dev/null 2>&1 ; then
		# only try to set SELinux type if we have SELinux
		sudo chcon -Rt svirt_sandbox_file_t "$DIR"
	fi
	docker run -v "$DIR:/var/lib/postgresql/data" -p $PORT:5432 -e POSTGRES_PASSWORD=password123 postgres
}

fpass() {
	filename=$(cd $HOME/.password-store && ag . -l -g '' | fzy)
	pass -c ${filename/.gpg/}
}

serve() {
	ruby -run -e httpd . -p ${1:-3000}
}

refactor() {
	# Takes two args:
	#	 $1 = current
	#	 $2 = wanted
	# ex, to change "user" to "account": `refactor user account`

	ag -l $1 | xargs sed -i "s/$1/$2/g"
}

jsonget() {
	curl -s $@ | python -m json.tool | pygmentize -l json
}


# ------------------------------------------------------------------------------
# Libraries/Imports
# ------------------------------------------------------------------------------
if [ -f ~/.env ]; then
	source ~/.env
fi

export CHRUBY_ROOT="/usr/share/chruby"
if [ -d "$CHRUBY_ROOT" ] ; then
	source "$CHRUBY_ROOT/chruby.sh"
	source "$CHRUBY_ROOT/auto.sh"
fi


# ------------------------------------------------------------------------------
# Environment
# ------------------------------------------------------------------------------
export TERM="screen-256color"
export EDITOR="vim"
export PATH="$HOME/bin:$HOME/.gem_local/bin:$PATH"
